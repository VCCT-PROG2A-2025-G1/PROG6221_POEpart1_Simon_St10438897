using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;


//References:
//ChatGPT
namespace POEpart1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Greeting();
            Cyperchat();
        }


        static void Greeting()
        {
            Console.WriteLine("Welcome to the Cyber Chat!");
            Console.Write("Please enter your name: ");
            string name = Console.ReadLine();
            Console.WriteLine($"Hello, {name}! I'm your virtual assistant for online safety.");
            Console.WriteLine("I'm here to help you with your online safety questions.");
            Console.WriteLine("Please only enter the word or phrase you would like to ask about.");
            Console.Write("Please ask your question: ");
        }
        static void Cyperchat()
        {
            //generated by ChatGPT
            //-------------------------------------------------
            Dictionary<string, string> responses = new Dictionary<string, string>
            {
                { "How are you?", "I'm doin' very well! Thanks for asking!" }, //I made
                { "What is your purpose", "My purpose is to help you educate you on cybersequrity related questions." }, //I made
                { "What can I ask you about?", "You can ask me about anything cybersecurity related, such as: What are passwords?" }, //I made
                { "password", "Remember, always use strong, unique passwords for your accounts." },
                { "phishing", "Be cautious with emails asking for personal information. Always verify the sender!" },
                { "two-factor authentication", "Enable two-factor authentication (2FA) on your accounts for an added layer of security." },
                { "malware", "Ensure you have updated anti-virus software to protect against malware and other malicious software." },
                { "vpn", "Use a VPN (Virtual Private Network) when browsing on public Wi-Fi to secure your data." },
                { "firewall", "Make sure your firewall is enabled to protect your device from unauthorized access." },
                { "ransomware", "Never click on suspicious links or open unexpected attachments to avoid ransomware attacks." },
                { "data encryption", "Use data encryption to secure sensitive information, both when stored and in transit." },
                { "social engineering", "Be wary of unsolicited calls or messages asking for personal or financial information." },
                { "software updates", "Always install software and security updates promptly to fix vulnerabilities in your system." },
                { "backup", "Regularly back up your important data to ensure you can recover it in case of an attack or system failure." },
                { "password manager", "Consider using a password manager to store and manage your passwords securely." },
                { "strong passwords", "Create passwords that are at least 12 characters long, using a mix of letters, numbers, and special characters." },
                { "public wifi", "Avoid accessing sensitive accounts or making transactions when using public Wi-Fi networks."}
            };
            //-------------------------------------------------

            //Only works with one question at a time, so no two questions at the same time

            while (true)
            {
                //try statement here for input validation
                string question = Console.ReadLine().ToLower();


                //retry this
                //try
                //{
                //    question = Console.ReadLine()?.ToLower() ?? 
                //        throw new InvalidOperationException("No input received.");
                //}
                //catch (Exception ex)
                //{
                //    Console.WriteLine($"[Input error] {ex.Message}");
                //    Console.WriteLine("Please enter a valid question.");
                //    continue;
                //}

                //Generated by ChatGPT to remove punctuation and special characters
                question = Regex.Replace(question, @"[^\w\s]", "");

                Console.WriteLine("--------------------------------------------------");

                //Generated by ChatGPT to check if the question contains any of the keys in the dictionary
                string matchKey = responses.Keys.FirstOrDefault(k => question.Contains(k));

                if (matchKey != null)
                {
                    Console.WriteLine(responses[matchKey]);
                    Console.WriteLine("Would you like to ask another question? (yes/no)");
                    //try statement here for input validation
                    string anotherQuestion = Console.ReadLine().ToLower();
                    if (anotherQuestion == "yes")
                    {
                        Console.Write("Please ask your question: ");
                    }
                    else
                    {
                        Console.WriteLine("Thank you for using the Cyber Chat! Stay safe online!");
                        break;
                    }
                }
                else
                {
                    Console.WriteLine("I'm sorry, I don't have an answer for that question.");
                    Console.WriteLine("If you would like to rephrase the question, type 'yes'.");
                    Console.WriteLine("If you want to exit, type 'exit'.");
                    //try statement here for input validation
                    string exit = Console.ReadLine().ToLower();
                    if (exit == "exit")
                    {
                        Console.WriteLine("Thank you for using the Cyber Chat! Stay safe online!");
                        break;
                    }
                    else if (exit == "yes")
                    {
                        Console.Write("Please ask your question: ");
                    }
                }
            }
        }
    }
}
